version: '3.8'

services:
  # Django Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env # Load environment variables from .env file
    restart: always
    depends_on:
      db: # Add healthcheck dependency
        condition: service_healthy
    # Remove environment variables here, they are now in .env
    volumes:
      - static_volume:/app/staticfiles # Keep static volume
    command: >
      sh -c "python manage.py migrate &&
             gunicorn notesapp.wsgi:application --bind 0.0.0.0:8000"
    healthcheck: # Add healthcheck for backend
        test: ["CMD", "curl", "-f", "http://localhost:8000/api/"] # Adjust URL if needed
        interval: 30s
        timeout: 10s
        retries: 5
        start_period: 30s

  # React Frontend (Build Stage)
  frontend:
    build:
      context: ./mynotes
      dockerfile: Dockerfile
    # No restart needed, it's just for building
    # No depends_on needed here
    # No environment needed here unless build args are used
    # No volumes needed for production build serving via Nginx
    # No command needed

  # MySQL Database
  db:
    image: mysql:8
    restart: always
    env_file:
      - .env # Load environment variables from .env file
    # Remove environment variables here
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck: # Add healthcheck for database
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx Web Server
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend # Nginx depends on backend being available
      # No explicit dependency on frontend needed as it serves static files
    volumes:
      - static_volume:/app/staticfiles # Nginx needs access to static files

volumes:
  mysql_data:
  static_volume:
