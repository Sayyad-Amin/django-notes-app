version: '3.8'

services:
  # Database tier
  db:
    image: mysql:8.0
    container_name: db
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application tier
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_backend
    restart: always
    volumes:
      - static_files:/app/staticfiles
    env_file:
      - .env
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      db:
        condition: service_healthy

  # Frontend tier
  frontend:
    build:
      context: ./mynotes
      dockerfile: Dockerfile
    container_name: react_frontend
    restart: always
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=/api

  # Web server tier
  nginx:
    image: nginx:1.23-alpine
    container_name: nginx_proxy
    restart: always
    ports:
      - "8090:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_files:/static
    depends_on:
      - backend
      - frontend

volumes:
  mysql_data:
  static_files:
